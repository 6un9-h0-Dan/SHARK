# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Validate Models on Shark Runtime

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-validate:
    strategy:
      fail-fast: true
      matrix:
        os: [a100, MacStudio, ubuntu-latest]
        suite: [cpu,gpu,vulkan]
        python-version: ["3.10"]
        include:
          - os: ubuntu-latest
            suite: lint
        exclude:
          - os: ubuntu-latest
            suite: vulkan
          - os: ubuntu-latest
            suite: gpu
          - os: ubuntu-latest
            suite: cpu
          - os: MacStudio
            suite: gpu
          - os: MacStudio
            suite: vulkan
          - os: a100
            # For now ignore cpu tests on a100 since we don't have that many runners and it is tests on macos
            suite: cpu

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      if: matrix.os == 'a100' ||  matrix.os == 'ubuntu-latest'
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Setup pip cache
      uses: actions/cache@v3
      if: matrix.os == 'a100' ||  matrix.os == 'ubuntu-latest'
      with:
        path: ~/.cache/pip
        key: ${{ matrix.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ matrix.os }}-pip-
          
    - name: Install dependencies
      if: matrix.suite == 'lint'
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest toml black
        
    - name: Lint with flake8
      if: matrix.suite == 'lint'
      run: |
        # black format check
        black --version
        black --line-length 127 --check .
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --exclude lit.cfg.py
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics --exclude lit.cfg.py

    - name: Validate CPU Models
      if: matrix.suite == 'cpu'
      run: |
        cd $GITHUB_WORKSPACE
        PYTHON=python${{ matrix.python-version }} IMPORTER=1 ./setup_venv.sh
        source shark.venv/bin/activate
        pytest -k 'not benchmark'  --ignore=shark/tests/test_shark_importer.py --ignore=tank/tf/  --ignore=benchmarks/tests/test_hf_benchmark.py --ignore=benchmarks/tests/test_benchmark.py 

    - name: Validate GPU Models
      if: matrix.suite == 'gpu'
      run: |
        cd $GITHUB_WORKSPACE
        PYTHON=python${{ matrix.python-version }} IMPORTER=1 ./setup_venv.sh
        source shark.venv/bin/activate
        pytest -k 'gpu' --ignore=shark/tests/test_shark_importer.py --ignore=benchmarks/tests/test_hf_benchmark.py --ignore=benchmarks/tests/test_benchmark.py 

    - name: Validate Vulkan Models
      if: matrix.suite == 'vulkan'
      run: |
        cd $GITHUB_WORKSPACE
        PYTHON=python${{ matrix.python-version }} IMPORTER=1 ./setup_venv.sh
        source shark.venv/bin/activate
        pytest -k 'vulkan' --ignore=shark/tests/test_shark_importer.py --ignore=benchmarks/tests/test_hf_benchmark.py --ignore=benchmarks/tests/test_benchmark.py
